from fastapi import FastAPI
from pydantic import BaseModel
from typing import List

app = FastAPI()

# Mod√®les de donn√©es
class Scene(BaseModel):
    id: int
    name: str
    duration: int

class Transition(BaseModel):
    id: int
    from_scene: str
    to_scene: str
    duration: int

class ShowData(BaseModel):
    scenes: List[Scene]
    transitions: List[Transition]

# Stockage en m√©moire (remplace une base de donn√©es)
database = ShowData(
    scenes=[{"id": 1, "name": "Scene 1", "duration": 30}],
    transitions=[]
)

# üîπ Endpoint pour r√©cup√©rer les donn√©es
@app.get("/show", response_model=ShowData)
def get_show():
    return database

# üîπ Endpoint pour sauvegarder les donn√©es
@app.post("/show")
def save_show(data: ShowData):
    global database
    database = data
    return {"message": "Donn√©es sauvegard√©es avec succ√®s"}
